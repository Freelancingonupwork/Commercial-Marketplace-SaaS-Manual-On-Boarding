{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "Managedidentity": {
            "type": "string"
        },
        "webAppName": {
            "defaultValue": "marketplace",
            "minLength": 2,
            "type": "String",
            "metadata": { "description": "Web app name." }
        },
        "webAppAdmin": {
            "type": "string",
            "metadata": { "description": "Specify the App's admin user email " }
        },
        "newOrExisting": {
            "type": "string",
            "defaultValue": "new",
            "allowedValues": [ "new", "existing" ]
        },
        "storageAccName": {
            "defaultValue": "storage",
            "minLength": 2,
            "type": "String",
            "metadata": { "description": "Storage account name." }
        },
        "storageAccountType": {
            "defaultValue": "Standard_LRS",
            "allowedValues": [ "Standard_LRS", "Standard_ZRS", "Standard_GRS", "Standard_RAGRS", "Premium_LRS" ],
            "type": "String"
        }
    },
    "variables": {
        "appServiceName": "[concat(parameters('webAppName'), uniqueString(resourceGroup().id))]",
        "appServicePlanName": "[concat(parameters('webAppName'), uniqueString(resourceGroup().id), '-asp')]",
        "storageAccountName": "[concat(parameters('storageAccName'), uniqueString(resourceGroup().id))]",
        "sku": "F1",
        "gitRepoUrl": "https://github.com/microsoft/Commercial-Marketplace-SaaS-Manual-On-Boarding",
        "dScriptCreateAppRegName": "createAppRegistrations",
        "aadAppUri": "[concat('https://', variables('appServiceName'), '.azurewebsites.net')]",
        "aadAppRedirectUri": "[concat('https://', variables('appServiceName'), '.azurewebsites.net/signin-oidc')]",
        "aadAppLogoutUri": "[concat('https://', variables('appServiceName'), '.azurewebsites.net/signout-callback-oidc')]",
        "cliArgs": "[concat(variables('aadAppUri'), ' ', variables('aadAppRedirectUri'), ' ', variables('aadAppLogoutUri'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Resources/deploymentScripts",
            "apiVersion": "2020-10-01",
            "name": "[variables('dScriptCreateAppRegName')]",
            "location": "[resourceGroup().location]",
            "kind": "AzureCLI",
            "identity": {
                "type": "userAssigned",
                "userAssignedIdentities": {
                    "[parameters('Managedidentity')]": { }
                }
            },
            "properties": {
                "forceUpdateTag": "1",
                "azCliVersion": "2.0.80",
                "arguments": "[variables('cliArgs')]",
                "scriptContent": "landingpageLoginAppReg=$(az rest --method POST --headers \"Content-Type=application/json\" --uri https://graph.microsoft.com/v1.0/applications --body '{\"displayName\": \"LandingpageAppReg\", \"api\":{\"requestedAccessTokenVersion\": 2}, \"signInAudience\" : \"AzureADandPersonalMicrosoftAccount\", \"web\": { \"redirectUris\": [\"'\"$1\"'\", \"'\"$2\"'\"], \"logoutUrl\": \"'\"$3\"'\", \"implicitGrantSettings\": { \"enableIdTokenIssuance\": true }}, \"requiredResourceAccess\": [{\"resourceAppId\": \"00000003-0000-0000-c000-000000000000\", \"resourceAccess\": [{ \"id\": \"e1fe6dd8-ba31-4d61-89e7-88639da4683d\", \"type\": \"Scope\" }]}] }' | jq '{lappID: .appId, publisherDomain: .publisherDomain}'); fulfillAppObjectId=$(az ad app create --display-name FulfillmentAppReg | jq -r '.objectId'); fulfillAppDetails=$(az ad app credential reset --id $fulfillAppObjectId); jq --slurp 'add' <(echo \"$landingpageLoginAppReg\") <(echo \"$fulfillAppDetails\") > $AZ_SCRIPTS_OUTPUT_PATH",
                "timeout": "PT30M",
                "cleanupPreference": "OnSuccess",
                "retentionInterval": "P1D"
            }
        },
        {
            "condition": "[equals(parameters('newOrExisting'), 'new')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "dependsOn": [ "[resourceId('Microsoft.Resources/deploymentScripts', 'createAppRegistrations')]" ],
            "name": "[variables('storageAccountName')]",
            "location": "[resourceGroup().location]",
            "tags": { "displayName": "storageAccount" },
            "sku": { "name": "[parameters('storageAccountType')]" }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2020-06-01",
            "name": "[variables('appServicePlanName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [ "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]" ],
            "sku": { "name": "[variables('sku')]" }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2020-06-01",
            "name": "[variables('appServiceName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [ "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]" ],
            "properties": {
                "siteConfig": {
                    "netFrameworkVersion": "v5.0",
                    "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                    "appSettings": 
                        [
                            {
                            "name": "AzureAd:Domain",
                            "value": "[reference(variables('dScriptCreateAppRegName')).outputs.publisherDomain]"
                            },
                            {
                            "name": "AzureAd:ClientId",
                            "value": "[reference(variables('dScriptCreateAppRegName')).outputs.lappID]"
                            },
                            {
                            "name": "MarketplaceClient:TenantId",
                            "value": "[reference(variables('dScriptCreateAppRegName')).outputs.tenant]"
                            },
                            {
                            "name": "MarketplaceClient:ClientId",
                            "value": "[reference(variables('dScriptCreateAppRegName')).outputs.appId]"
                            },
                            {
                            "name": "MarketplaceClient:ClientSecret",
                            "value": "[reference(variables('dScriptCreateAppRegName')).outputs.password]"
                            },
                            {
                            "name": "WebHookTokenParameters:TenantId",
                            "value": "[reference(variables('dScriptCreateAppRegName')).outputs.tenant]"
                            },
                            {
                            "name": "WebHookTokenParameters:ClientId",
                            "value": "[reference(variables('dScriptCreateAppRegName')).outputs.appId]"
                            },
                            {
                            "name": "CommandCenter:CommandCenterAdmin",
                            "value": "[parameters('WebAppAdmin')]"
                            },
                            {
                            "name": "CommandCenter:OperationsStoreConnectionString",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId(resourceGroup().name,'Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-04-01').keys[0].value,';EndpointSuffix=core.windows.net')]"
                            },
                            {
                            "name": "CommandCenter:AzureQueue:StorageConnectionString",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId(resourceGroup().name,'Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-04-01').keys[0].value,';EndpointSuffix=core.windows.net')]"
                            }
                        ]
                }
            },
            "resources": [
                {
                    "type": "sourcecontrols",
                    "apiVersion": "2020-06-01",
                    "name": "web",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [ "[resourceId('Microsoft.Web/sites', variables('appServiceName'))]" ],
                    "properties": {
                        "repoUrl": "[variables('gitRepoUrl')]",
                        "branch": "main",
                        "isManualIntegration": true
                    }
                }
            ]
        }
    ],
    "outputs": {
        "LandingPage": 
        {
            "type": "string",
            "value": "[concat('https://', variables('appServiceName'), '.azurewebsites.net/landingpage')]"
        },
        "Webhook": 
        {
            "type": "string",
            "value": "[concat('https://', variables('appServiceName'), '.azurewebsites.net/api/webhook')]"
        },
        "TenantId": 
        {
            "type": "string",
            "value": "[reference(variables('dScriptCreateAppRegName')).outputs.tenant]"
        },
        "ClientId": 
        {
            "type": "string",
            "value": "[reference(variables('dScriptCreateAppRegName')).outputs.appId]"
        }
    }
}